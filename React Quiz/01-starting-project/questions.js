export default [
  {
    id: 'q1',
    text: '다음 정의 중 React.js를 가장 잘 설명하는 것은 무엇입니까?',
    answers: [
      '선언형 코드를 사용하여 사용자 인터페이스를 구축하기 위한 라이브러리입니다.',
      '웹 애플리케이션에서 상태 관리를 위한 라이브러리입니다.',
      '명령형 코드를 사용하여 사용자 인터페이스를 구축하기 위한 프레임워크입니다.',
      '모바일 애플리케이션을 구축하는 데만 사용되는 라이브러리입니다.',
    ],
  },
  {
    id: 'q2',
    text: 'React 훅(Hooks)의 목적은 무엇입니까?',
    answers: [
      '함수형 컴포넌트에서 상태 및 기타 React 기능을 사용할 수 있게 합니다.',
      'React 애플리케이션에서 반응형 레이아웃을 만듭니다.',
      '애플리케이션 내에서 오류를 처리합니다.',
      '글로벌 상태 관리를 위한 Redux 라이브러리의 일부입니다.',
    ],
  },
  {
    id: 'q3',
    text: 'JSX가 무엇인지 식별할 수 있습니까?',
    answers: [
      'JavaScript에 HTML과 유사한 구문을 추가하는 JavaScript 확장입니다.',
      '동적 사용자 인터페이스를 구축하기 위한 JavaScript 라이브러리입니다.',
      'React를 위해 특별히 만들어진 HTML 버전입니다.',
      'React 애플리케이션에서 HTTP 요청을 만드는 도구입니다.',
    ],
  },
  {
    id: 'q4',
    text: 'React에서 컴포넌트를 만드는 가장 일반적인 방법은 무엇입니까?',
    answers: [
      '렌더링 가능한 값을 반환하는 JavaScript 함수를 정의합니다.',
      'JavaScript에서 사용자 정의 HTML 태그를 정의합니다.',
      '확장자가 .jsx인 파일을 만듭니다.',
      'new 키워드 뒤에 컴포넌트 이름을 사용합니다.',
    ],
  },
  {
    id: 'q5',
    text: 'React 상태(state)라는 용어는 무엇을 의미합니까?',
    answers: [
      '값을 보유하고 변경 시 컴포넌트를 렌더링할 수 있는 컴포넌트 내의 객체입니다.',
      'React 컴포넌트가 있는 생명주기 단계입니다.',
      '모든 props 및 컴포넌트를 포함한 React 애플리케이션의 전체 상태입니다.',
      'React 애플리케이션에서 글로벌 상태를 관리하기 위한 라이브러리입니다.',
    ],
  },
  {
    id: 'q6',
    text: 'React 앱에서 리스트 내용을 렌더링하는 일반적인 방법은 무엇입니까?',
    answers: [
      'map() 메서드를 사용하여 데이터 배열을 반복하고 JSX를 반환합니다.',
      'for() 루프를 사용하여 데이터 배열을 반복하고 JSX를 반환합니다.',
      'forEach() 메서드를 사용하여 데이터 배열을 반복하고 JSX를 반환합니다.',
      'loop() 메서드를 사용하여 데이터 배열을 반복하고 JSX를 반환합니다.',
    ],
  },
  {
    id: 'q7',
    text: '조건부로 콘텐츠를 렌더링하는 데 사용할 수 없는 접근 방식은 무엇입니까?',
    answers: [
      '#if 템플릿 구문을 사용합니다.',
      '삼항 연산자를 사용합니다.',
      '&& 연산자를 사용합니다.',
      'if-else 문을 사용합니다.',
    ],
  },
]
